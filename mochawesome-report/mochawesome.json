{
  "stats": {
    "suites": 2,
    "tests": 3,
    "passes": 0,
    "pending": 0,
    "failures": 3,
    "start": "2023-10-11T15:18:12.715Z",
    "end": "2023-10-11T15:18:18.869Z",
    "duration": 6154,
    "testsRegistered": 3,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "cd43f5b7-7024-42e3-9b86-5e7ac8da7545",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f4358d39-b7e8-4255-b1fb-1e1e18ba656e",
          "title": "Get Request Example",
          "fullFile": "E:\\Coding Things\\PetStoreAPI_Test\\test\\api\\chaiAssert.js",
          "file": "\\test\\api\\chaiAssert.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "response status equal to 200",
              "fullTitle": "Get Request Example response status equal to 200",
              "timedOut": true,
              "duration": 2004,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Check response status equal to 200\nexpect((await response).status).to.equal(200)",
              "err": {
                "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\Coding Things\\PetStoreAPI_Test\\test\\api\\chaiAssert.js)",
                "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\Coding Things\\PetStoreAPI_Test\\test\\api\\chaiAssert.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "e6ca79c4-acbf-40a3-bd0a-662985959219",
              "parentUUID": "f4358d39-b7e8-4255-b1fb-1e1e18ba656e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "e6ca79c4-acbf-40a3-bd0a-662985959219"
          ],
          "pending": [],
          "skipped": [],
          "duration": 2004,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "4b8d3f59-629f-49d3-9ded-fce207c8aadf",
          "title": "Post Request Example",
          "fullFile": "E:\\Coding Things\\PetStoreAPI_Test\\test\\api\\chaiAssert.js",
          "file": "\\test\\api\\chaiAssert.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "response status equal to 200",
              "fullTitle": "Post Request Example response status equal to 200",
              "timedOut": true,
              "duration": 2010,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Check response status equal to 200\nexpect((await response).status).to.equal(200)",
              "err": {
                "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\Coding Things\\PetStoreAPI_Test\\test\\api\\chaiAssert.js)",
                "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\Coding Things\\PetStoreAPI_Test\\test\\api\\chaiAssert.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "3be37d47-8547-466f-bde4-e61156fe70eb",
              "parentUUID": "4b8d3f59-629f-49d3-9ded-fce207c8aadf",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "response body to haveOwnProperty",
              "fullTitle": "Post Request Example response body to haveOwnProperty",
              "timedOut": true,
              "duration": 2014,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Expect the body response has value\nexpect((await response).body).to.haveOwnProperty('message')",
              "err": {
                "message": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\Coding Things\\PetStoreAPI_Test\\test\\api\\chaiAssert.js)",
                "estack": "Error: Timeout of 2000ms exceeded. For async tests and hooks, ensure \"done()\" is called; if returning a Promise, ensure it resolves. (E:\\Coding Things\\PetStoreAPI_Test\\test\\api\\chaiAssert.js)\n    at listOnTimeout (node:internal/timers:569:17)\n    at process.processTimers (node:internal/timers:512:7)",
                "diff": null
              },
              "uuid": "8e79c943-b936-4366-bbd6-9d242dd36ae9",
              "parentUUID": "4b8d3f59-629f-49d3-9ded-fce207c8aadf",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "3be37d47-8547-466f-bde4-e61156fe70eb",
            "8e79c943-b936-4366-bbd6-9d242dd36ae9"
          ],
          "pending": [],
          "skipped": [],
          "duration": 4024,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}